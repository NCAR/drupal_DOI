<?php
// Install / remove the doi content type during module installation / removal



/**
 * Implements hook_node_info().
 *
 */
function doi_display_node_info() {
  return array(
    'doi_display' => array(
      'name' => t('DOI'),
      'base' => 'node_content',
      'description' => t(''),
      'title_label' => t('Digital Object Identifier'),
      'locked' => TRUE,
    ),
  );
}

/**
 * Implements hook_node_type_insert().
 *
 */
function doi_display_node_type_insert($content_type) {
  if ($content_type->type == 'doi_display') {
    // Create all the fields we are adding to our content type.
    foreach (_doi_display_installed_fields() as $field) {
      field_create_field($field);
    }

    // Create all the instances for our fields.
    foreach (_doi_display_installed_instances() as $instance) {
      $instance['entity_type'] = 'node';
      $instance['bundle'] = 'doi_display';
      field_create_instance($instance);
    }


    // Create the group
    $group_name = 'group_no_edit';
    $entity_type = 'node';
    $bundle = 'doi_display';
    $mode = 'form';

    $group = (object) array(
      'identifier' => $group_name .'|'. $entity_type .'|'. $bundle .'|'. $mode,
      'group_name' => $group_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
      'mode' => $mode,
      'label' => 'Don\'t edit these fields, they are populated by DataCite. Make changes there.',
      'weight' => '1',
      'children' => array(
        'field_doi_identifier',
        'field_doi_creator',
        'field_doi_title',
        'field_doi_publisher',
        'field_doi_description',
        'field_doi_contributors',
        'field_doi_dates',
        'field_doi_rights',
        'field_doi_full_citation',
        'field_doi_location',

      ),
      'format_type' => 'fieldset',
      'format_settings' => array(
        'formatter' => 'collapsible',
        'instance_settings' => array(
          'description' => '',
          'classes' => '',
          'required_fields' => 1,
        ),
      ),
    );

    field_group_group_save($group);

    node_types_rebuild();
  }
}

/**
 * Implements hook_form().
 *
 */
function doi_display_form($node, $form_state) {
  return node_content_form($node, $form_state);
}



/**
 * Implements hook_uninstall().
 */
function doi_display_uninstall() {
    $ournewtype = 'doi_display';
    $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
    $result = db_query($sql, array(':type' => $ournewtype));
    $nodeids = array();
    foreach ($result as $row) {
        $nodeids[] = $row->nid;
    }
    node_delete_multiple($nodeids);
    node_type_delete($ournewtype);

    // $ournewtype = 'doi-display';
    // node_type_delete($ournewtype);


    foreach (_doi_display_installed_fields() as $field) {
      field_delete_field($field['field_name']);
    }

	// DOES need to be run twice
	field_purge_batch(1000); 
	field_purge_batch(1000); 
}



/**
 * Define the fields for our content type.
 *
 * This big array is factored into this function for readability.
 *
 * @return array
 *   An associative array specifying the fields we wish to add to our
 *   new node type.
 */
function _doi_display_installed_fields() {
  return array(
	'field_doi_reference' => array(
		'field_name'  => 'field_doi_reference',
		'cardinality' => 1,
		'type'        => 'entityreference',
		'settings' => array(
			'target_type' => 'node',
			'handler_settings' => array(
				// 'target_bundles' => array('publication')
			),
		),
	),

	'field_first_use_paper' => array(
		'field_name'  => 'field_first_use_paper',
		'cardinality' => 1,
		'type'        => 'entityreference',
		'settings' => array(
			'target_type' => 'node',
			'handler_settings' => array(
				'target_bundles' => array('publication')
			),
		),
	),

    'field_doi_identifier' => array(
      'field_name'  => 'field_doi_identifier',
      'cardinality' => 1,
      'type'        => 'text',
    ),
  
    'field_doi_creator' => array(
      'field_name'  => 'field_doi_creator',
      'cardinality' => 1,
      'type'        => 'text',
    ),
  
    'field_doi_title' => array(
      'field_name'  => 'field_doi_title',
      'cardinality' => 1,
      'type'        => 'text',
    ),
  
    'field_doi_publisher' => array(
      'field_name'  => 'field_doi_publisher',
      'cardinality' => 1,
      'type'        => 'text',
    ),
  
    'field_doi_dates' => array(
      'field_name'  => 'field_doi_dates',
      'cardinality' => 1,
      'type'        => 'text',
    ),
  
    'field_doi_location' => array(
      'field_name'  => 'field_doi_location',
      'cardinality' => 1,
      'type'        => 'text',
    ),
  
    'field_doi_description' => array(
      'field_name'  => 'field_doi_description',
      'cardinality' => 1,
      'type'        => 'text_long',
    ),
  
    'field_doi_contributors' => array(
      'field_name'  => 'field_doi_contributors',
      'cardinality' => 1,
      'type'        => 'text_long',
    ),
  
    'field_doi_rights' => array(
      'field_name'  => 'field_doi_rights',
      'cardinality' => 1,
      'type'        => 'text_long',
    ),

    'field_doi_full_citation' => array(
      'field_name'  => 'field_doi_full_citation',
      'cardinality' => 1,
      'type'        => 'text_long',
    ),
  );
}

/**
 * Define the field instances for our content type.
 *
 */
function _doi_display_installed_instances() {
  return array(


	'field_doi_reference' => array(
		'field_name'  => 'field_doi_reference',
		'label' => t('DOI Reference'),
		'type'        => 'text',
		'widget'      => array(
			'type'    => 'autocomplete',
		),
		'settings' => array(
			'target_type' => 'node',
			'handler_settings' => array(
				// 'target_bundles' => array('publication')
			),
		),
	),

	'field_first_use_paper' => array(
		'field_name'  => 'field_first_use_paper',
		'label' => t('First Use Paper'),
		'type'        => 'text',
		'widget'      => array(
			'type'    => 'autocomplete',
		),
		'settings' => array(
			'target_type' => 'node',
			'handler_settings' => array(
				'target_bundles' => array('publication')
			),
		),
	),
    
    'field_doi_identifier' => array(
      'field_name'  => 'field_doi_identifier',
      'label' => t('Identifier'),
      'type'        => 'text',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    
    'field_doi_creator' => array(
      'field_name'  => 'field_doi_creator',
      'label' => t('Creator'),
      'type'        => 'text',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    
    'field_doi_title' => array(
      'field_name'  => 'field_doi_title',
      'label' => t('Title'),
      'type'        => 'text',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    
    'field_doi_publisher' => array(
      'field_name'  => 'field_doi_publisher',
      'label' => t('Publisher'),
      'type'        => 'text',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    
    'field_doi_dates' => array(
      'field_name'  => 'field_doi_dates',
      'label' => t('Dates'),
      'type'        => 'text',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    
    'field_doi_location' => array(
      'field_name'  => 'field_doi_location',
      'label' => t('Location'),
      'type'        => 'text',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    
    'field_doi_description' => array(
      'field_name'  => 'field_doi_description',
      'label' => t('Description'),
      'type'        => 'text_long',
      'widget'      => array(
        'type'    => 'text_textarea',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    
    'field_doi_contributors' => array(
      'field_name'  => 'field_doi_contributors',
      'label' => t('Contributors'),
      'type'        => 'text_long',
      'widget'      => array(
        'type'    => 'text_textarea',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    
    'field_doi_rights' => array(
      'field_name'  => 'field_doi_rights',
      'label' => t('Rights'),
      'type'        => 'text_long',
      'widget'      => array(
        'type'    => 'text_textarea',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),

    'field_doi_full_citation' => array(
      'field_name'  => 'field_doi_full_citation',
      'label' => t('Rights'),
      'type'        => 'text_long',
      'widget'      => array(
        'type'    => 'text_textarea',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
  );
}
